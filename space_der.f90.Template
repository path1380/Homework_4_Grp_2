program space_der
! =======================================================================
! This program computes the coefficients of the spatial derivative
! term in the transport equation given the function u(x) and variable 
! coefficients (speed) a(x). Here
!                 u(x) = EXP[SIN[X]]
!                 a(x) = 2/(2 + SIN[X}])
! =======================================================================
  use type_defs
  use quad_1dmod
  use InputControl
  use lgl
  use leg_funs
  use approx_funs
  use mat_builder
  use diff_coeff
  use coeff

  implicit none
  integer, parameter :: leg_degree = DDDD, num_grdpts = NNNN 
  real(dp), parameter :: lt_endpt = LLLL, rt_endpt = RRRR
 
  real(dp), dimension(0:leg_degree) :: coeffs, approx_coeff
  real(dp), dimension(num_grdpts) :: sample_nodes, approx_deriv, true_der
  real(dp) :: endpt_vals(2), u_endpt_vals(2), stepsize
  type(quad_1d) :: u_quad
  integer :: num_nodes = CEILING(1.5_dp*(dble(leg_degree) +1.0_dp)), j

  !build Legendre coefficients for u
  u_quad = element(lt_endpt,rt_endpt,leg_degree)
  u_quad%nvars = 1

  !evaluate variable coefficient at endpoints
  endpt_vals = var_coeffs(2,(/lt_endpt, rt_endpt/))

  !evaluate approximate u at endpoints of interval

  u_endpt_vals = function_eval(2,(/lt_endpt, rt_endpt/))

  !set trace values
  u_quad%lt_trace = endpt_vals(1)*u_endpt_vals(1)
  u_quad%rt_trace = endpt_vals(2)*u_endpt_vals(2)


  !take the spatial derivative 
  coeffs = derivative_coefficients(num_nodes, leg_degree, u_quad)

  !build equispaced grid to evaluate derivative
  stepsize = (rt_endpt - lt_endpt)/dble(num_grdpts + 1)
  do j=1,num_grdpts
    sample_nodes(j) = lt_endpt + j*stepsize
  end do

  !evaluate derivative on equispaced grid
  approx_deriv = approx_eval(lt_endpt,rt_endpt,num_grdpts,sample_nodes,leg_degree,coeffs)
  do j = 1,num_grdpts
    true_der(j) = 2.0_dp*EXP(SIN(sample_nodes(j)))*COS(sample_nodes(j))*(1+SIN(sample_nodes(j)))
    true_der(j) = true_der(j)/((2.0_dp + SIN(sample_nodes(j)))**2.0_dp)
  end do
  write(*,'((E24.16))') maxval(ABS(approx_deriv-true_der))
  call deallocate_quad1d(u_quad)

end program space_der